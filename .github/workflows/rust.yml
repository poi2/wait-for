name: "Rust"
on:
  push:
    branches: ["main"]
  pull_request:
  schedule:
    # Run weekly on Sundays at 00:00 UTC (JST 09:00)
    - cron: "0 0 * * 0"

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      rust: ${{ steps.filter.outputs.rust || github.event_name == 'schedule' }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        if: github.event_name != 'schedule'
        with:
          filters: |
            rust:
              - 'src/**'
              - 'tests/**'
              - 'Cargo.toml'
              - 'Cargo.lock'
              - '.github/workflows/rust.yml'
      - name: Force run on schedule
        if: github.event_name == 'schedule'
        run: echo "rust=true" >> $GITHUB_OUTPUT

  lint-and-test:
    name: Lint and test
    needs: changes
    if: ${{ needs.changes.outputs.rust == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # Prepare
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      - run: rustc --version

      # Check compilation
      - name: Run cargo check
        run: cargo check --release --workspace --all-features

      # Check lints
      - name: Run cargo clippy
        run: |
          cargo clippy --version
          cargo clippy --all-targets --all-features -- -D warnings --no-deps

      # Check formatting
      - name: Run cargo fmt
        run: |
          cargo fmt --version
          cargo fmt --all --check --message-format human

      # Run tests
      - name: Run tests with all features
        run: cargo test --all-features

      # Run integration tests
      - name: Run integration tests
        run: cargo test --test integration_test --verbose

  build-cross-platform:
    name: Build on ${{ matrix.os }}
    needs: [changes, lint-and-test]
    if: ${{ needs.changes.outputs.rust == 'true' }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
    timeout-minutes: 20
    steps:
      # Prepare
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - run: rustc --version

      # Build release
      - name: Build release
        run: cargo build --release --verbose

  test-on-nightly:
    name: Test on nightly
    needs: [changes, lint-and-test]
    if: ${{ needs.changes.outputs.rust == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      # Prepare
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
      - run: rustc --version

      # Check unused dependencies
      - name: Install cargo-udeps
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-udeps
      - name: Run cargo +nightly udeps
        run: cargo +nightly udeps --release --workspace --all-targets --all-features

  # Summary job that depends on all other jobs
  rust-ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [changes, lint-and-test, build-cross-platform, test-on-nightly]
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.changes.result }}" == "failure" ||
                "${{ needs.lint-and-test.result }}" == "failure" ||
                "${{ needs.build-cross-platform.result }}" == "failure" ||
                "${{ needs.test-on-nightly.result }}" == "failure" ]]; then
            echo "One or more jobs failed"
            exit 1
          else
            echo "All jobs passed or were skipped"
          fi
